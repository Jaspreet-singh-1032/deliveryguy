# Generated by Django 4.2 on 2023-11-14 20:54

import app.models
import autoslug.fields
import ckeditor.fields
import ckeditor_uploader.fields
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_bike', models.BooleanField(default=False, verbose_name='bikeman Users')),
                ('is_customer', models.BooleanField(default=False, verbose_name='Customer Users')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Such As News, Update and Article', max_length=50, verbose_name='Blog Category')),
            ],
            options={
                'verbose_name': 'Blog Category',
                'verbose_name_plural': 'Blog Categorys',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Category of Food')),
                ('icon', models.ImageField(upload_to='category/%Y/%m/%d', verbose_name='Category Image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category of Foods',
                'verbose_name_plural': 'Categories of Foods',
            },
        ),
        migrations.CreateModel(
            name='DeliveryPackages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='The Name for The Delivery Package')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description of the Package')),
                ('price', models.PositiveIntegerField(verbose_name='The Price for The Package in Naira')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'DeliveryPackages',
                'verbose_name_plural': 'DeliveryPackagess',
            },
        ),
        migrations.CreateModel(
            name='Good',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, max_length=500, populate_from='name')),
                ('description', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, default=1.0, max_digits=10)),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='Numbers in Stock')),
                ('number', models.PositiveIntegerField(default=0, verbose_name='Max Number Per Order')),
                ('image', models.ImageField(upload_to='products/%Y/%m/%d', verbose_name='Product Image')),
                ('available', models.BooleanField(default=True)),
                ('deactivate', models.BooleanField(default=False)),
                ('returnpolicy', ckeditor_uploader.fields.RichTextUploadingField(blank=True, null=True, verbose_name='Product Return Policy')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category', to='app.category')),
            ],
            options={
                'verbose_name': 'Food Details',
                'verbose_name_plural': 'Food Details',
            },
        ),
        migrations.CreateModel(
            name='HomeAdvert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='The Name of the Advert')),
                ('caption', models.CharField(blank=True, max_length=50, null=True, verbose_name='Advert Caption Words')),
                ('mcaption', models.CharField(blank=True, max_length=50, null=True, verbose_name='Main Advert Caption Words, Single Word')),
                ('othercaption', models.CharField(blank=True, max_length=150, null=True, verbose_name='Other Advert Caption Words')),
                ('image', models.ImageField(help_text='Upload Image for the Advert (1317PX X 520px)', upload_to='advert/', verbose_name='Image of Advertment')),
                ('website', models.URLField(blank=True, null=True, verbose_name='')),
                ('active', models.BooleanField(default=True, verbose_name='Activate/Deactivate')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Home Page Advert',
                'verbose_name_plural': 'HomePage Adverts',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Location')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
            },
        ),
        migrations.CreateModel(
            name='LoginAdvert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='The Name of the Advert')),
                ('image', models.ImageField(help_text='Upload IMage for the Advert', upload_to='advert/', verbose_name='Image of Advertment')),
                ('website', models.URLField(blank=True, null=True, verbose_name='')),
                ('active', models.BooleanField(default=True, verbose_name='Activate/Deactivate')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Login Advert',
                'verbose_name_plural': 'Login Adverts',
            },
        ),
        migrations.CreateModel(
            name='OpenHours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.CharField(max_length=25, verbose_name='Days of the Week')),
                ('openTime', models.TimeField(verbose_name='Opening Time of the day')),
                ('closingTime', models.TimeField(verbose_name='Closing Time of the day')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'OpenHours',
                'verbose_name_plural': 'OpenHourss',
            },
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance_price_food', models.FloatField(blank=True, null=True, verbose_name='Price Per Kilometter for Food')),
                ('distance_price_package', models.FloatField(blank=True, null=True, verbose_name='Price Per Kilometter for Package')),
            ],
            options={
                'verbose_name': 'Settings',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPackage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Subscription PAckage Name')),
                ('distance', models.FloatField(verbose_name='Distance For the Package')),
                ('price', models.FloatField(verbose_name='price For the PAckage')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'SubscriptionPackage',
                'verbose_name_plural': 'SubscriptionPackages',
            },
        ),
        migrations.CreateModel(
            name='Subscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paid', models.BooleanField(verbose_name='Payment Status')),
                ('usage', models.FloatField(verbose_name='Distance Remains')),
                ('active', models.BooleanField(verbose_name='Subscription Status')),
                ('ref_code', models.CharField(max_length=250)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='package', to='app.subscriptionpackage')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='subscriber', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Subscriber',
                'verbose_name_plural': 'Subscriber',
            },
        ),
        migrations.CreateModel(
            name='ReceiverDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(max_length=250, verbose_name='Receiver Fullname')),
                ('company_name', models.CharField(blank=True, max_length=250, null=True, verbose_name='Company Name(if Applicable)')),
                ('picking_address', models.CharField(max_length=250, verbose_name='Pick Up Address')),
                ('telephone', models.CharField(max_length=15, verbose_name='Pickup PhoneNumber')),
                ('r_telephone', models.CharField(max_length=15, verbose_name='Reciever PhoneNumber')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Receiver Email address')),
                ('deliver_address', models.CharField(max_length=250, verbose_name='Reciever Delivery Address')),
                ('receiver_code', models.CharField(default=app.models.create_ref_code, max_length=150)),
                ('process', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Package Receiver',
                'verbose_name_plural': 'Package Receiver',
            },
        ),
        migrations.CreateModel(
            name='ProfileCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=25, verbose_name='Phone Number')),
                ('gender', models.CharField(choices=[('1', 'Male'), ('2', 'Female')], max_length=10, verbose_name='Gender')),
                ('image', models.ImageField(blank=True, help_text='Passport Photograhpy of The Customer', null=True, upload_to='customer/', verbose_name='Image of Customer')),
                ('address', models.TextField(verbose_name='Address')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProfileBike',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=25, verbose_name='Phone Number')),
                ('image', models.ImageField(help_text='Passport Photograhpy of The BikeMan', null=True, upload_to='bike/', verbose_name='Image of Bike Man')),
                ('identification', models.ImageField(help_text="International Passport, BVN, Voters Card, Driver's driver license", null=True, upload_to='bike/', verbose_name='Means of identification')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=10, verbose_name='Gender')),
                ('address', models.CharField(max_length=250, verbose_name='Permanent Address')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PackageDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nature_of_goods', models.CharField(help_text='Such As Letter, International Passport', max_length=250, verbose_name='Nature of The Parcel')),
                ('image', models.ImageField(null=True, upload_to='parcel/', verbose_name='Image of Parcel')),
                ('values', models.CharField(help_text='The Value of the Goods in Naira', max_length=250, verbose_name='Estimated Amount Value of the Parcel')),
                ('numbers', models.PositiveIntegerField(verbose_name='Numbers of The Parcel')),
                ('weight', models.FloatField(blank=True, help_text='The weight of the Parcel in KG', null=True, verbose_name='Total Weight of the Parcel')),
                ('dimensions', models.CharField(blank=True, help_text='23mm X 12mm', max_length=50, null=True, verbose_name='Dimension of the Package')),
                ('instruction', models.TextField(blank=True, null=True, verbose_name='Any Instruction of Delivery')),
                ('paid_amount', models.DecimalField(decimal_places=2, default=1.0, max_digits=10, verbose_name='Paid Amount')),
                ('mins', models.CharField(blank=True, max_length=10, null=True, verbose_name='Mintues to Delivery')),
                ('distance', models.CharField(blank=True, max_length=10, null=True, verbose_name='Ditance to Delivery')),
                ('tracking_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tracking Number')),
                ('pay_on_delivery', models.BooleanField(default=False, verbose_name='Payment On Delivery Method')),
                ('paid', models.BooleanField(default=False)),
                ('subscription', models.BooleanField(default=False, verbose_name='Payment With Subscription')),
                ('being_delivered', models.BooleanField(default=False)),
                ('taken', models.BooleanField(default=False, verbose_name='being Taken by Bike Man')),
                ('ongoing', models.BooleanField(default=False, verbose_name='Ongoing Order By Bike')),
                ('received', models.BooleanField(default=False)),
                ('refund_requested', models.BooleanField(default=False)),
                ('refund_granted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bike', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('receiver_details', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.receiverdetails')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Package Detail',
                'verbose_name_plural': 'Package Details',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('quantity', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(0)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.good')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_code', models.CharField(default=app.models.create_ref_code, max_length=150)),
                ('ordernote', models.TextField(blank=True, null=True, verbose_name='Order Notes')),
                ('schedule', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Schedule Delivery Time')),
                ('shipping_address', models.CharField(max_length=250, null=True, verbose_name='Shipping Adresss')),
                ('latitude', models.CharField(max_length=250, null=True, verbose_name='Latitude of Adresss')),
                ('longitude', models.CharField(max_length=250, null=True, verbose_name='Longitude of Adresss')),
                ('mins', models.CharField(blank=True, max_length=250, null=True, verbose_name='Time To Deliver The Goods')),
                ('distance', models.CharField(blank=True, max_length=250, null=True, verbose_name='Distance To Deliver The Goods')),
                ('ordered', models.BooleanField(default=False)),
                ('qr_image', models.ImageField(blank=True, null=True, upload_to='qr_codes/')),
                ('paid_amount', models.DecimalField(decimal_places=2, default=1.0, max_digits=10, verbose_name='Paid Amount')),
                ('delivery_amount', models.DecimalField(decimal_places=2, default=1.0, max_digits=10, verbose_name='Delivery Amount')),
                ('ordered_date', models.DateTimeField()),
                ('paid', models.BooleanField(default=False)),
                ('subscription', models.BooleanField(default=False, verbose_name='Payment With Subscription')),
                ('taken', models.BooleanField(default=False, verbose_name='being Taken by Bike Man')),
                ('ongoing', models.BooleanField(default=False, verbose_name='Ongoing Order By Bike')),
                ('being_delivered', models.BooleanField(default=False)),
                ('received', models.BooleanField(default=False)),
                ('refund_requested', models.BooleanField(default=False)),
                ('refund_granted', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bike', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bike', to=settings.AUTH_USER_MODEL)),
                ('deliveryPackages', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='delivery', to='app.deliverypackages')),
                ('items', models.ManyToManyField(to='app.orderitem')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='app.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GoodImageGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='goods', verbose_name='Images of The Goods')),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.good')),
            ],
            options={
                'verbose_name': 'Food Gallery',
                'verbose_name_plural': 'Food Gallery',
            },
        ),
        migrations.CreateModel(
            name='DeliveryDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('myaddress', models.CharField(max_length=250, verbose_name='Delivery Address')),
                ('latitude', models.CharField(max_length=250, null=True, verbose_name='Latitude of Adresss')),
                ('longitude', models.CharField(max_length=250, null=True, verbose_name='Longitude of Adresss')),
                ('message', models.CharField(max_length=250, verbose_name='Delivery Instructions')),
                ('nickname', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mylocation', to='app.location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer Address',
                'verbose_name_plural': 'Customer Addresses',
            },
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('content', ckeditor.fields.RichTextField()),
                ('active', models.BooleanField(default=True, verbose_name='Activative/Deactivate')),
                ('image', models.ImageField(blank=True, help_text='Upload Image for the . Size is 620px X 461px', null=True, upload_to='blog/', verbose_name='Blog Image')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blogcategory', to='app.blogcategory')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Blog',
                'verbose_name_plural': 'Blogs',
            },
        ),
    ]
